// <auto-generated />
using AuctionHunterFront.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace AuctionHunterFront.Migrations
{
    [DbContext(typeof(AuctionHunterDbContext))]
    [Migration("20180601141859_AuctionHunterDbContext Separating identity")]
    partial class AuctionHunterDbContextSeparatingidentity
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn)
                .HasAnnotation("ProductVersion", "2.0.1-rtm-125");

            modelBuilder.Entity("AuctionHunterFront.Models.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AccessFailedCount");

                    b.Property<string>("ConcurrencyStamp");

                    b.Property<string>("Email");

                    b.Property<bool>("EmailConfirmed");

                    b.Property<bool>("LockoutEnabled");

                    b.Property<DateTimeOffset?>("LockoutEnd");

                    b.Property<string>("NormalizedEmail");

                    b.Property<string>("NormalizedUserName");

                    b.Property<Guid>("OriginProductId");

                    b.Property<string>("PasswordHash");

                    b.Property<string>("PhoneNumber");

                    b.Property<bool>("PhoneNumberConfirmed");

                    b.Property<string>("SecurityStamp");

                    b.Property<bool>("TwoFactorEnabled");

                    b.Property<string>("UserName");

                    b.HasKey("Id");

                    b.ToTable("ApplicationUser");
                });

            modelBuilder.Entity("AuctionHunterFront.Models.ApplicationUserAuctionHunterItem", b =>
                {
                    b.Property<string>("ApplicationUserId");

                    b.Property<string>("AuctionHunterItemId");

                    b.Property<int?>("AuctionHunterItemId1");

                    b.HasKey("ApplicationUserId", "AuctionHunterItemId");

                    b.HasIndex("AuctionHunterItemId1");

                    b.ToTable("ApplicationUserAuctionHunterItems");
                });

            modelBuilder.Entity("AuctionHunterFront.Models.AuctionHunterItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AuctionLink")
                        .IsRequired()
                        .HasMaxLength(250);

                    b.Property<string>("ContentJson");

                    b.Property<int>("OnPage");

                    b.Property<DateTime>("Timestamp");

                    b.HasKey("Id");

                    b.HasIndex("AuctionLink")
                        .IsUnique();

                    b.ToTable("AuctionHunterItems");
                });

            modelBuilder.Entity("AuctionHunterFront.Models.ApplicationUserAuctionHunterItem", b =>
                {
                    b.HasOne("AuctionHunterFront.Models.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("ApplicationUserId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("AuctionHunterFront.Models.AuctionHunterItem", "AuctionHunterItem")
                        .WithMany()
                        .HasForeignKey("AuctionHunterItemId1");
                });
#pragma warning restore 612, 618
        }
    }
}
